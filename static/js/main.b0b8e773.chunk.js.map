{"version":3,"sources":["DataTypes.ts","Map.tsx","DataSelector.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["DataName","regularNumber","Intl","NumberFormat","undefined","maximumFractionDigits","minimumFractionDigits","dataTypes","Map","set","GDP2018","name","units","formatter","value","style","currency","format","color","scaleThreshold","domain","range","scales","cmi10_00_1","scaleLinear","cmi10_80_9","cmi10_80_1","def_00_19","reverse","def_80_19","def_80_99","dry_00_19","dry_80_19","dry_80_99","gw_00_19","gw_80_19","gw_80_99","ht_00_19","ht_80_19","ht_80_99","pet_00_19","pet_80_19","pet_80_99","prc_00_19","prc_80_19","prc_80_99","ro_00_19","ro_80_19","ro_80_99","wet_00_19","wet_80_19","wet_80_99","tooltip","select","append","attr","handleMouseOut","d","this","transition","duration","data","selection","svgRef","useRef","useEffect","svg","current","countyGeoJson","feature","objects","counties","selectAll","features","join","properties","get","NaN","geoPath","on","this_county","NAME","html","event","pageX","pageY","handleMouseOverCreator","ref","viewBox","id","DataSelector","onSelectionChange","onChange","Array","from","entries","map","dataName","key","App","useState","setState","json","process","then","Fragment","target","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b0b8e773.chunk.js","sourcesContent":["import * as scales from 'd3-scale-chromatic';\nimport { scaleThreshold, scaleLinear } from 'd3';\nimport { ScaleSequential, ScaleContinuousNumeric, ScaleThreshold } from 'd3-scale';\n\nexport enum DataName {\n    GDP2018,\n    cmi10_00_1,\n    cmi10_80_9,\n    cmi10_80_1,\n    def_00_19,\n    def_80_19,\n    def_80_99,\n    dry_00_19,\n    dry_80_19,\n    dry_80_99,\n    gw_00_19,\n    gw_80_19,\n    gw_80_99,\n    ht_00_19,\n    ht_80_19,\n    ht_80_99,\n    pet_00_19,\n    pet_80_19,\n    pet_80_99,\n    prc_00_19,\n    prc_80_19,\n    prc_80_99,\n    ro_00_19,\n    ro_80_19,\n    ro_80_99,\n    wet_00_19,\n    wet_80_19,\n    wet_80_99,\n}\n\nexport type Data = {\n    name: string,\n    units: string,\n    formatter: (value: number) => string,\n    color: ScaleSequential<string> | ScaleContinuousNumeric<string, string> | ScaleThreshold<number, string>,\n}\n\nconst regularNumber = new Intl.NumberFormat(undefined, {\n    maximumFractionDigits: 0,\n    minimumFractionDigits: 0\n});\n\nconst dataTypes = new Map<DataName, Data>();\ndataTypes.set(DataName.GDP2018, {\n    name: \"GDP 2018\",\n    units: \"USD\",\n    formatter: value => new Intl.NumberFormat(\n        undefined,\n        {\n            style: 'currency',\n            currency: 'USD',\n            maximumFractionDigits: 0,\n            minimumFractionDigits: 0\n        }\n    ).format(value),\n    color: scaleThreshold<number, string>().domain([0, 1000000, 2000000, 3000000, 10000000, 100000000, 300000000, 700000000]).range(scales.schemeGreens[8])\n});\ndataTypes.set(DataName.cmi10_00_1, {\n    name:\"Climate Moisture Index 2000-2019\",\n    units:\"\",\n    formatter: value => regularNumber.format(value),\n    color: scaleLinear<string>().domain([-10, 0, 10]).range(scales.schemeBrBG[3])\n});\ndataTypes.set(DataName.cmi10_80_9, {\n    name:\"Climate Moisture Index 1980-1999\",\n    units:\"\",\n    formatter: value => regularNumber.format(value),\n    color: scaleLinear<string>().domain([-10, 0, 10]).range(scales.schemeBrBG[3])\n});\ndataTypes.set(DataName.cmi10_80_1, {\n    name:\"Climate Moisture Index 1980-2019\",\n    units:\"\",\n    formatter: value => regularNumber.format(value),\n    color: scaleLinear<string>().domain([-10, 0, 10]).range(scales.schemeBrBG[3])\n});\ndataTypes.set(DataName.def_00_19, {\n    name:\"Irrigation Deficit 2000-2019\",\n    units:\"mm/year\",\n    formatter: value => regularNumber.format(value),\n    color: scaleLinear<string>().domain([-600, 0, 1600]).range([...scales.schemeBrBG[3]].reverse())\n});\ndataTypes.set(DataName.def_80_19, {\n    name:\"Irrigation Deficit 1980-2019\",\n    units:\"mm/year\",\n    formatter: value => regularNumber.format(value),\n    color: scaleLinear<string>().domain([-600, 0, 1600]).range([...scales.schemeBrBG[3]].reverse())\n});\ndataTypes.set(DataName.def_80_99, {\n    name:\"Irrigation Deficit 1980-1999\",\n    units:\"mm/year\",\n    formatter: value => regularNumber.format(value),\n    color: scaleLinear<string>().domain([-600, 0, 1600]).range([...scales.schemeBrBG[3]].reverse())\n});\ndataTypes.set(DataName.dry_00_19, {\n    name:\"Drought Indicator 2000-2019\",\n    units:\"mm/year\",\n    formatter: value => regularNumber.format(value),\n    color: scaleLinear<string>().domain([0, 750, 1500]).range(scales.schemeGreys[3])\n});\ndataTypes.set(DataName.dry_80_19, {\n    name:\"Drought Indicator 1980-2019\",\n    units:\"mm/year\",\n    formatter: value => regularNumber.format(value),\n    color: scaleLinear<string>().domain([0, 750, 1500]).range(scales.schemeGreys[3])\n});\ndataTypes.set(DataName.dry_80_99, {\n    name:\"Drought Indicator 1980-1999\",\n    units:\"mm/year\",\n    formatter: value => regularNumber.format(value),\n    color: scaleLinear<string>().domain([0, 750, 1500]).range(scales.schemeGreys[3])\n});\ndataTypes.set(DataName.gw_00_19, {\n    name:\"Groundwater 2000-2019\",\n    units:\"mm/month\",\n    formatter: value => regularNumber.format(value),\n    color: scaleLinear<string>().domain([0, 20, 40]).range(scales.schemeGreys[3])\n});\ndataTypes.set(DataName.gw_80_19, {\n    name:\"Groundwater 1980-2019\",\n    units:\"mm/month\",\n    formatter: value => regularNumber.format(value),\n    color: scaleLinear<string>().domain([0, 20, 40]).range(scales.schemeGreys[3])\n});\ndataTypes.set(DataName.gw_80_99, {\n    name:\"Groundwater 1980-1999\",\n    units:\"mm/month\",\n    formatter: value => regularNumber.format(value),\n    color: scaleLinear<string>().domain([0,20, 40]).range(scales.schemeGreys[3])\n});\ndataTypes.set(DataName.ht_00_19, {\n    name:\"Maximum Month Temperature 2000-2019\",\n    units:\"°C\",\n    formatter: value => regularNumber.format(value),\n    color: scaleLinear<string>().domain([20, 30, 40]).range(scales.schemeGreys[3])\n});\ndataTypes.set(DataName.ht_80_19, {\n    name:\"Maximum Month Temperature 1980-2019\",\n    units:\"°C\",\n    formatter: value => regularNumber.format(value),\n    color: scaleLinear<string>().domain([20, 30, 40]).range(scales.schemeGreys[3])\n});\ndataTypes.set(DataName.ht_80_99, {\n    name:\"Maximum Month Temperature 1980-1999\",\n    units:\"°C\",\n    formatter: value => regularNumber.format(value),\n    color: scaleLinear<string>().domain([20, 30, 40]).range(scales.schemeGreys[3])\n});\ndataTypes.set(DataName.pet_00_19, {\n    name:\"Mean Annual Potential Evapotranspiration 2000-2019\",\n    units:\"mm/year\",\n    formatter: value => regularNumber.format(value),\n    color: scaleLinear<string>().domain([300, 1000, 1700]).range(scales.schemeGreys[3])\n});\ndataTypes.set(DataName.pet_80_19, {\n    name:\"Mean Annual Potential Evapotranspiration 1980-2019\",\n    units:\"mm/year\",\n    formatter: value => regularNumber.format(value),\n    color: scaleLinear<string>().domain([300, 1000, 1700]).range(scales.schemeGreys[3])\n});\ndataTypes.set(DataName.pet_80_99, {\n    name:\"Mean Annual Potential Evapotranspiration 1980-1999\",\n    units:\"mm/year\",\n    formatter: value => regularNumber.format(value),\n    color: scaleLinear<string>().domain([300, 1000, 1700]).range(scales.schemeGreys[3])\n});\ndataTypes.set(DataName.prc_00_19, {\n    name: \"Mean Annual Precipitation 2000-2019\",\n    units:\"mm/year\",\n    formatter: value => regularNumber.format(value),\n    color: scaleLinear<string>().domain([0, 1100, 2200]).range(scales.schemeGreys[3])\n});\ndataTypes.set(DataName.prc_80_19, {\n    name:\"Mean Annual Precipitation 1980-2019\",\n    units:\"mm/year\",\n    formatter: value => regularNumber.format(value),\n    color: scaleLinear<string>().domain([0, 1100, 2200]).range(scales.schemeGreys[3])\n});\ndataTypes.set(DataName.prc_80_99, {\n    name:\"Mean Annual Precipitation 1980-1999\",\n    units:\"mm/year\",\n    formatter: value => regularNumber.format(value),\n    color: scaleLinear<string>().domain([0, 1100, 2200]).range(scales.schemeGreys[3])\n});\ndataTypes.set(DataName.ro_00_19, {\n    name:\"Mean Annual Runoff 2000-2019\",\n    units:\"mm/year\",\n    formatter: value => regularNumber.format(value),\n    color: scaleLinear<string>().domain([0, 1000, 2000]).range(scales.schemeGreys[3])\n});\ndataTypes.set(DataName.ro_80_19, {\n    name:\"Mean Annual Runoff 1980-2019\",\n    units:\"mm/year\",\n    formatter: value => regularNumber.format(value),\n    color: scaleLinear<string>().domain([0, 1000, 2000]).range(scales.schemeGreys[3])\n});\ndataTypes.set(DataName.ro_80_99, {\n    name:\"Mean Annual Runoff 1980-1999\",\n    units:\"mm/year\",\n    formatter: value => regularNumber.format(value),\n    color: scaleLinear<string>().domain([0, 1000, 2000]).range(scales.schemeGreys[3])\n});\ndataTypes.set(DataName.wet_00_19, {\n    name:\"Flood Indicator 2000-2019\",\n    units:\"mm/month\",\n    formatter: value => regularNumber.format(value),\n    color: scaleLinear<string>().domain([0, 250, 500]).range(scales.schemeGreys[3])\n});\ndataTypes.set(DataName.wet_80_19, {\n    name:\"Flood Indicator 1980-2019\",\n    units:\"mm/month\",\n    formatter: value => regularNumber.format(value),\n    color: scaleLinear<string>().domain([0, 250, 500]).range(scales.schemeGreys[3])\n});\ndataTypes.set(DataName.wet_80_99, {\n    name:\"Flood Indicator 1890-1999\",\n    units:\"mm/month\",\n    formatter: value => regularNumber.format(value),\n    color: scaleLinear<string>().domain([0, 250, 500]).range(scales.schemeGreys[3])\n});\n\nexport default dataTypes;","import React, { useRef, useEffect } from 'react';\nimport { select, geoPath, event} from 'd3';\nimport { feature } from 'topojson-client';\nimport { Objects, Topology, GeometryCollection } from 'topojson-specification';\nimport { GeoJsonProperties } from 'geojson';\nimport dataTypes, { DataName } from './DataTypes';\n\nconst tooltip = select(\"body\")\n    .append(\"div\")\n    .attr(\"class\", \"tooltip\")\n    .style(\"opacity\", 0)\n    .style(\"position\", \"absolute\")\n    .style(\"font-size\", \"0.7em\")\n    .style(\"font-family\", \"sans-serif\")\n    .style(\"font-weight\", 600)\n    .style(\"padding\", \"4px\")\n    .style(\"background\", \"white\")\t\n    .style(\"pointer-events\", \"none\");\n\nconst handleMouseOverCreator = (selection: DataName) => {\n    return function(this: any, d: any) {\n        select(this)\n            .style(\"opacity\", 0.5)\n            .style(\"stroke\", \"black\")\n            .style(\"stroke-width\", 0.5)\n    \n        tooltip.transition()\n            .duration(200)\n            .style(\"opacity\", .9)\n        \n        let value = 0\n        let name = \"---\"\n    \n        let this_county = d.properties[DataName[selection]]\n        if (this_county) {\n            value = this_county;\n            name = d.properties.NAME\n        }\n    \n        tooltip.html(`${name}: ${dataTypes.get(selection)?.formatter(value)}`)\t\n            .style(\"left\", `${event.pageX + 20}px`)\t\t\n            .style(\"top\", (event.pageY - 45) + \"px\");\n    }\n};\n\nconst handleMouseOut = function(this:any, d:any) {\n    select(this)\n        .style(\"opacity\", 1)\n        .style(\"stroke\", null)\n\n    tooltip.transition()\t\t\n        .duration(200)\t\t\n        .style(\"opacity\", 0)\n}\n\nconst Map = ({data, selection}: {data: Topology<Objects<GeoJsonProperties>> | undefined, selection: DataName}) => {\n    const svgRef = useRef<SVGSVGElement>(null);\n\n    useEffect(() => {\n        const svg = select(svgRef.current);\n\n        if (data === undefined) {\n            return;\n        }\n        const countyGeoJson = feature(\n            data,\n            data.objects.counties as GeometryCollection<GeoJsonProperties>\n        )\n        svg\n            .select(\"#map\")\n            .selectAll(\"path\")\n            .data(countyGeoJson.features)\n            .join(\"path\")\n            .attr(\"class\", \"county\")\n            .attr(\"fill\", d => {\n                if (d.properties) {\n                    return dataTypes.get(selection)!.color(d.properties[DataName[selection]]);\n                } else {\n                    return dataTypes.get(selection)!.color(NaN);\n                }\n            })\n            .attr(\"d\", geoPath());\n        svg\n            .selectAll(\".county\")\n            .on(\"touchmove mousemove\", handleMouseOverCreator(selection))\n            .on(\"touchend mouseleave\", handleMouseOut);\n    }, [data, selection])\n\n    return (\n        <svg ref={svgRef} viewBox=\"0, 0, 975, 610\">\n            <g id=\"map\"></g>\n        </svg>\n    );\n}\n\nexport default Map;","import React, { ChangeEvent } from 'react';\nimport dataTypes, { DataName } from './DataTypes';\n\ntype DataSelectorProps = {\n    selection: DataName,\n    onSelectionChange: (event: ChangeEvent<HTMLSelectElement>) => void\n};\n\nconst getUnitString = (units: string) => units ? `(${units})` : \"\";\n\nconst getOptions = () => {\n    return Array.from(dataTypes.entries()).map(\n        ([dataName, data]) => <option key={DataName[dataName]} value={DataName[dataName]}>{data.name} {getUnitString(data.units)}</option>\n    )\n}\n\nconst DataSelector = ({selection, onSelectionChange}: DataSelectorProps) => {\n    return (\n    <select value={DataName[selection]} onChange={onSelectionChange}>\n        {getOptions()}\n    </select>\n    )\n}\n\nexport default DataSelector;","import React, { useEffect, useState, ChangeEvent } from 'react';\nimport Map from './Map';\nimport DataSelector from './DataSelector';\nimport { Objects, Topology } from 'topojson-specification';\nimport { GeoJsonProperties } from 'geojson';\nimport './App.css';\nimport { DataName } from './DataTypes';\nimport { json } from 'd3-fetch';\n\ntype AppState = {\n  data: Topology<Objects<GeoJsonProperties>> | undefined,\n  selection: DataName\n};\n\nconst App = () => {\n  const [{data, selection}, setState] = useState<AppState>({data: undefined, selection: DataName.GDP2018});\n  useEffect(() => {\n    json<Topology<Objects<GeoJsonProperties>>>(process.env.PUBLIC_URL + \"/usa-topo.json\").then(d => setState({data: d, selection: selection}));\n  }, []);\n\n  const onSelectionChange = (event: ChangeEvent<HTMLSelectElement>) => {\n    setState({data: data, selection: DataName[event.target.value as keyof typeof DataName]});\n  }\n\n  return (\n    <React.Fragment>\n      <h1>Climate Risk Map</h1>\n      <DataSelector onSelectionChange={onSelectionChange} selection={selection} />\n      <Map data={data} selection={selection}/>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}