{"version":3,"sources":["DataTypes.ts","Map.tsx","DataSelector.tsx","Home.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["DataName","regularNumber","format","dataTypes","Map","set","cmi10_00_1","name","units","formatter","color","scaleDiverging","scales","domain","cmi10_80_9","cmi10_80_1","def_00_19","x","def_80_19","def_80_99","dry_00_19","scaleSequential","dry_80_19","dry_80_99","gw_00_19","gw_80_19","gw_80_99","ht_00_19","ht_80_19","ht_80_99","pet_00_19","pet_80_19","pet_80_99","prc_00_19","prc_80_19","prc_80_99","ro_00_19","ro_80_19","ro_80_99","wet_00_19","wet_80_19","wet_80_99","GDP2018","scaleThreshold","range","Allindustr","Farming","Mining","Constructi","Retailtrad","Informatio","Wholesalet","discuss","PerCapitap","tooltip","select","append","attr","style","getUnitString","handleMouseOut","d","this","transition","duration","data","selection","svgRef","useRef","useEffect","dataType","get","svg","current","undefined","countyGeoJson","feature","objects","counties","legendSequential","legendColor","cells","shapeWidth","shapeHeight","shapePadding","titleWidth","title","labelFormat","orient","scale","call","selectAll","features","join","properties","NaN","geoPath","datum","mesh","states","on","value","this_county","County_Sta","replace","html","event","pageX","pageY","handleMouseOverCreator","console","log","ref","viewBox","id","DataSelector","onSelectionChange","onChange","Array","from","entries","map","dataName","key","Home","history","useHistory","useParams","idEnum","useState","setData","setSelection","json","process","then","Fragment","push","target","App","basename","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f3687c9e.chunk.js","sourcesContent":["import * as scales from 'd3-scale-chromatic';\nimport { scaleThreshold, scaleDiverging, scaleSequential, format } from 'd3';\nimport { ScaleSequential, ScaleThreshold, ScaleDiverging } from 'd3-scale';\n\nexport enum DataName {\n    cmi10_00_1,\n    cmi10_80_9,\n    cmi10_80_1,\n    def_00_19,\n    def_80_19,\n    def_80_99,\n    dry_00_19,\n    dry_80_19,\n    dry_80_99,\n    gw_00_19,\n    gw_80_19,\n    gw_80_99,\n    ht_00_19,\n    ht_80_19,\n    ht_80_99,\n    pet_00_19,\n    pet_80_19,\n    pet_80_99,\n    prc_00_19,\n    prc_80_19,\n    prc_80_99,\n    ro_00_19,\n    ro_80_19,\n    ro_80_99,\n    wet_00_19,\n    wet_80_19,\n    wet_80_99,\n    Allindustr,\n    Farming,\n    Mining,\n    Constructi,\n    Retailtrad,\n    Informatio,\n    Wholesalet,\n    discuss,\n    PerCapitap,\n    GDP2018,\n}\n\nexport type Data = {\n    name: string,\n    units: string,\n    formatter: (n: number | { valueOf(): number }) => string,\n    color: ScaleSequential<string> | ScaleThreshold<number, string> | ScaleDiverging<string>,\n}\n\nconst regularNumber = format(\",.0f\");\n\nconst dataTypes = new Map<DataName, Data>();\ndataTypes.set(DataName.cmi10_00_1, {\n    name:\"Climate Moisture Index 2000-2019\",\n    units:\"\",\n    formatter: regularNumber,\n    color: scaleDiverging<string>(scales.interpolateBrBG).domain([-10, 0, 10])\n});\ndataTypes.set(DataName.cmi10_80_9, {\n    name:\"Climate Moisture Index 1980-1999\",\n    units:\"\",\n    formatter: regularNumber,\n    color: scaleDiverging<string>(scales.interpolateBrBG).domain([-10, 0, 10])\n});\ndataTypes.set(DataName.cmi10_80_1, {\n    name:\"Climate Moisture Index 1980-2019\",\n    units:\"\",\n    formatter: regularNumber,\n    color: scaleDiverging<string>(scales.interpolateBrBG).domain([-10, 0, 10])\n});\ndataTypes.set(DataName.def_00_19, {\n    name:\"Irrigation Deficit 2000-2019\",\n    units:\"mm/year\",\n    formatter: regularNumber,\n    color: scaleDiverging<string>(x => scales.interpolateBrBG(1-x)).domain([-600, 0, 1600])\n});\ndataTypes.set(DataName.def_80_19, {\n    name:\"Irrigation Deficit 1980-2019\",\n    units:\"mm/year\",\n    formatter: regularNumber,\n    color: scaleDiverging<string>(x => scales.interpolateBrBG(1-x)).domain([-600, 0, 1600])\n});\ndataTypes.set(DataName.def_80_99, {\n    name:\"Irrigation Deficit 1980-1999\",\n    units:\"mm/year\",\n    formatter: regularNumber,\n    color: scaleDiverging<string>(x => scales.interpolateBrBG(1-x)).domain([-600, 0, 1600])\n});\ndataTypes.set(DataName.dry_00_19, {\n    name:\"Drought Indicator 2000-2019\",\n    units:\"mm/year\",\n    formatter: regularNumber,\n    color: scaleSequential<string>(scales.interpolateBlues).domain([0, 1500])\n});\ndataTypes.set(DataName.dry_80_19, {\n    name:\"Drought Indicator 1980-2019\",\n    units:\"mm/year\",\n    formatter: regularNumber,\n    color: scaleSequential<string>(scales.interpolateBlues).domain([0, 1500])\n});\ndataTypes.set(DataName.dry_80_99, {\n    name:\"Drought Indicator 1980-1999\",\n    units:\"mm/year\",\n    formatter: regularNumber,\n    color: scaleSequential<string>(scales.interpolateBlues).domain([0, 1500])\n});\ndataTypes.set(DataName.gw_00_19, {\n    name:\"Groundwater 2000-2019\",\n    units:\"mm/month\",\n    formatter: regularNumber,\n    color: scaleSequential<string>(scales.interpolateBlues).domain([0, 40])\n});\ndataTypes.set(DataName.gw_80_19, {\n    name:\"Groundwater 1980-2019\",\n    units:\"mm/month\",\n    formatter: regularNumber,\n    color: scaleSequential<string>(scales.interpolateBlues).domain([0, 40])\n});\ndataTypes.set(DataName.gw_80_99, {\n    name:\"Groundwater 1980-1999\",\n    units:\"mm/month\",\n    formatter: regularNumber,\n    color: scaleSequential<string>(scales.interpolateBlues).domain([0, 40])\n});\ndataTypes.set(DataName.ht_00_19, {\n    name:\"Maximum Month Temperature 2000-2019\",\n    units:\"°C\",\n    formatter: regularNumber,\n    color: scaleDiverging<string>(x => scales.interpolateSpectral(1 - x)).domain([20, 30, 40])\n});\ndataTypes.set(DataName.ht_80_19, {\n    name:\"Maximum Month Temperature 1980-2019\",\n    units:\"°C\",\n    formatter: regularNumber,\n    color: scaleDiverging<string>(x => scales.interpolateSpectral(1 - x)).domain([20, 30, 40])\n});\ndataTypes.set(DataName.ht_80_99, {\n    name:\"Maximum Month Temperature 1980-1999\",\n    units:\"°C\",\n    formatter: regularNumber,\n    color: scaleDiverging<string>(x => scales.interpolateSpectral(1 - x)).domain([20, 30, 40])\n});\ndataTypes.set(DataName.pet_00_19, {\n    name:\"Mean Annual Potential Evapotranspiration 2000-2019\",\n    units:\"mm/year\",\n    formatter: regularNumber,\n    color: scaleSequential<string>(scales.interpolateBlues).domain([300, 1700])\n});\ndataTypes.set(DataName.pet_80_19, {\n    name:\"Mean Annual Potential Evapotranspiration 1980-2019\",\n    units:\"mm/year\",\n    formatter: regularNumber,\n    color: scaleSequential<string>(scales.interpolateBlues).domain([300, 1700])\n});\ndataTypes.set(DataName.pet_80_99, {\n    name:\"Mean Annual Potential Evapotranspiration 1980-1999\",\n    units:\"mm/year\",\n    formatter: regularNumber,\n    color: scaleSequential<string>(scales.interpolateBlues).domain([300, 1700])\n});\ndataTypes.set(DataName.prc_00_19, {\n    name: \"Mean Annual Precipitation 2000-2019\",\n    units:\"mm/year\",\n    formatter: regularNumber,\n    color: scaleSequential<string>(scales.interpolateBlues).domain([0, 2200])\n});\ndataTypes.set(DataName.prc_80_19, {\n    name:\"Mean Annual Precipitation 1980-2019\",\n    units:\"mm/year\",\n    formatter: regularNumber,\n    color: scaleSequential<string>(scales.interpolateBlues).domain([0, 2200])\n});\ndataTypes.set(DataName.prc_80_99, {\n    name:\"Mean Annual Precipitation 1980-1999\",\n    units:\"mm/year\",\n    formatter: regularNumber,\n    color: scaleSequential<string>(scales.interpolateBlues).domain([0, 2200])\n});\ndataTypes.set(DataName.ro_00_19, {\n    name:\"Mean Annual Runoff 2000-2019\",\n    units:\"mm/year\",\n    formatter: regularNumber,\n    color: scaleSequential<string>(scales.interpolateBlues).domain([0, 2000])\n});\ndataTypes.set(DataName.ro_80_19, {\n    name:\"Mean Annual Runoff 1980-2019\",\n    units:\"mm/year\",\n    formatter: regularNumber,\n    color: scaleSequential<string>(scales.interpolateBlues).domain([0, 2000])\n});\ndataTypes.set(DataName.ro_80_99, {\n    name:\"Mean Annual Runoff 1980-1999\",\n    units:\"mm/year\",\n    formatter: regularNumber,\n    color: scaleSequential<string>(scales.interpolateBlues).domain([0, 2000])\n});\ndataTypes.set(DataName.wet_00_19, {\n    name:\"Flood Indicator 2000-2019\",\n    units:\"mm/month\",\n    formatter: regularNumber,\n    color: scaleSequential<string>(scales.interpolateBlues).domain([0, 500])\n});\ndataTypes.set(DataName.wet_80_19, {\n    name:\"Flood Indicator 1980-2019\",\n    units:\"mm/month\",\n    formatter: regularNumber,\n    color: scaleSequential<string>(scales.interpolateBlues).domain([0, 500])\n});\ndataTypes.set(DataName.wet_80_99, {\n    name:\"Flood Indicator 1890-1999\",\n    units:\"mm/month\",\n    formatter: regularNumber,\n    color: scaleSequential<string>(scales.interpolateBlues).domain([0, 500])\n});\ndataTypes.set(DataName.GDP2018, {\n    name: \"GDP 2018\",\n    units: \"USD\",\n    formatter: format(\"$,.0f\"),\n    color: scaleThreshold<number, string>().domain([0, 1000000, 2000000, 3000000, 10000000, 100000000, 300000000, 700000000]).range(scales.schemeGreens[8])\n});\ndataTypes.set(DataName.Allindustr, {\n    name:\"Allindustr\",\n    units:\"\",\n    formatter: regularNumber,\n    color: scaleSequential<string>(scales.interpolateGreens).domain([0, 1000000])\n});\ndataTypes.set(DataName.Farming, {\n    name:\"Farming\",\n    units:\"\",\n    formatter: regularNumber,\n    color: scaleSequential<string>(scales.interpolateGreens).domain([0, 20000])\n});\ndataTypes.set(DataName.Mining, {\n    name:\"Mining\",\n    units:\"\",\n    formatter: regularNumber,\n    color: scaleSequential<string>(scales.interpolateGreens).domain([0, 20000])\n});\ndataTypes.set(DataName.Constructi, {\n    name:\"Constructi\",\n    units:\"\",\n    formatter: regularNumber,\n    color: scaleSequential<string>(scales.interpolateGreens).domain([0, 20000])\n});\ndataTypes.set(DataName.Retailtrad, {\n    name:\"Retailtrad\",\n    units:\"\",\n    formatter: regularNumber,\n    color: scaleSequential<string>(scales.interpolateGreens).domain([0, 20000])\n});\ndataTypes.set(DataName.Informatio, {\n    name:\"Informatio\",\n    units:\"\",\n    formatter: regularNumber,\n    color: scaleSequential<string>(scales.interpolateGreens).domain([0, 20000])\n});\ndataTypes.set(DataName.Wholesalet, {\n    name:\"Wholesalet\",\n    units:\"\",\n    formatter: regularNumber,\n    color: scaleSequential<string>(scales.interpolateGreens).domain([0, 20000])\n});\ndataTypes.set(DataName.discuss, {\n    name:\"discuss\",\n    units:\"\",\n    formatter: regularNumber,\n    color: scaleSequential<string>(scales.interpolateGreens).domain([20, 60])\n});\ndataTypes.set(DataName.PerCapitap, {\n    name:\"PerCapitap\",\n    units:\"\",\n    formatter: regularNumber,\n    color: scaleDiverging<string>(scales.interpolateBrBG).domain([10000, 40000, 100000])\n});\n\nexport default dataTypes;","import React, { useRef, useEffect } from 'react';\nimport { select, geoPath, event } from 'd3';\nimport { feature, mesh } from 'topojson-client';\nimport { Objects, Topology, GeometryCollection } from 'topojson-specification';\nimport { GeoJsonProperties } from 'geojson';\nimport dataTypes, { DataName } from './DataTypes';\nimport { legendColor } from 'd3-svg-legend';\n\nconst tooltip = select(\"body\")\n    .append(\"div\")\n    .attr(\"class\", \"tooltip\")\n    .style(\"opacity\", 0)\n    .style(\"position\", \"absolute\")\n    .style(\"font-size\", \"0.7em\")\n    .style(\"font-family\", \"sans-serif\")\n    .style(\"font-weight\", 600)\n    .style(\"padding\", \"4px\")\n    .style(\"background\", \"white\")\t\n    .style(\"pointer-events\", \"none\");\n\nconst handleMouseOverCreator = (selection: DataName) => {\n    return function(this: any, d: any) {\n        select(this)\n            .style(\"opacity\", 0.5)\n            .style(\"stroke\", \"black\")\n            .style(\"stroke-width\", 0.5)\n    \n        tooltip.transition()\n            .duration(200)\n            .style(\"opacity\", .9)\n        \n        let value = 0\n        let name = \"---\"\n    \n        let this_county = d.properties[DataName[selection]]\n        if (this_county === 0 || this_county) {\n            value = this_county;\n            name = d.properties.County_Sta.replace(\"_\", \", \")\n        }\n        const dataType = dataTypes.get(selection)!;\n\n        tooltip.html(`${name}: ${dataType.formatter(value) + getUnitString(dataType.units)}`)\t\n            .style(\"left\", `${event.pageX + 20}px`)\t\t\n            .style(\"top\", (event.pageY - 45) + \"px\");\n    }\n};\n\nconst getUnitString = (units: string) => units ? ` ${units}` : \"\";\nconst getUnitStringWithParens = (units: string) => units ? ` (${units})` : \"\";\n\nconst handleMouseOut = function(this:any, d:any) {\n    select(this)\n        .style(\"opacity\", 1)\n        .style(\"stroke\", null)\n\n    tooltip.transition()\t\t\n        .duration(200)\t\t\n        .style(\"opacity\", 0)\n}\n\nconst Map = ({data, selection}: {data: Topology<Objects<GeoJsonProperties>> | undefined, selection: DataName}) => {\n    const svgRef = useRef<SVGSVGElement>(null);\n\n    useEffect(() => {\n        const dataType = dataTypes.get(selection)!;\n        const svg = select(svgRef.current);\n\n        if (data === undefined) {\n            return;\n        }\n        const countyGeoJson = feature(\n            data,\n            data.objects.counties as GeometryCollection<GeoJsonProperties>\n        )\n\n        // legend\n        const legendSequential = legendColor()\n            .cells(5)\n            .shapeWidth(20)\n            .shapeHeight(30)\n            .shapePadding(0)\n            .titleWidth(200)\n            .title(dataType.name + getUnitStringWithParens(dataType.units))\n            .labelFormat(dataType.formatter)\n            .orient(\"vertical\")\n            .scale(dataType.color)\n\n        svg.select<SVGGElement>(\"#legend\")\n            .attr(\"transform\", \"translate(925, 320)\")\n            // @ts-ignore\n            .call(legendSequential)\n\n        // colorized counties\n        svg.select(\"#counties\")\n            .selectAll(\"path\")\n            .data(countyGeoJson.features)\n            .join(\"path\")\n            .attr(\"class\", \"county\")\n            .attr(\"fill\", d => {\n                if (d.properties) {\n                    return dataType.color(d.properties[DataName[selection]]);\n                } else {\n                    return dataType.color(NaN);\n                }\n            })\n            .attr(\"d\", geoPath());\n\n        // state borders\n        svg.select(\"#states\")\n            .select(\"path\")\n            .datum(mesh(data, data.objects.states as GeometryCollection))\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke\", \"white\")\n            .attr(\"stroke-linejoin\", \"round\")\n            .attr(\"d\", geoPath());\n\n        // tooltips\n        svg\n            .selectAll(\".county\")\n            .on(\"touchmove mousemove\", handleMouseOverCreator(selection))\n            .on(\"touchend mouseleave\", handleMouseOut);\n        \n        console.log(\"TESTING THIS FOR LOOPS\")\n    }, [data, selection])\n\n    return (\n        <svg ref={svgRef} viewBox=\"0, 0, 1175, 610\">\n            <g id=\"legend\"></g>\n            <g id=\"counties\"></g>\n            <g id=\"states\"><path /></g>\n        </svg>\n    );\n}\n\nexport default Map;","import React, { ChangeEvent } from 'react';\nimport dataTypes, { DataName } from './DataTypes';\n\ntype DataSelectorProps = {\n    selection: DataName,\n    onSelectionChange: (event: ChangeEvent<HTMLSelectElement>) => void\n};\n\nconst getUnitString = (units: string) => units ? `(${units})` : \"\";\n\nconst getOptions = () => {\n    return Array.from(dataTypes.entries()).map(\n        ([dataName, data]) => <option key={DataName[dataName]} value={DataName[dataName]}>{data.name} {getUnitString(data.units)}</option>\n    )\n}\n\nconst DataSelector = ({selection, onSelectionChange}: DataSelectorProps) => {\n    return (\n    <select value={DataName[selection]} onChange={onSelectionChange}>\n        {getOptions()}\n    </select>\n    )\n}\n\nexport default DataSelector;","import React, { useEffect, useState, ChangeEvent } from 'react';\nimport Map from './Map';\nimport DataSelector from './DataSelector';\nimport { Objects, Topology } from 'topojson-specification';\nimport { GeoJsonProperties } from 'geojson';\nimport './App.css';\nimport { DataName } from './DataTypes';\nimport { json } from 'd3-fetch';\nimport { useHistory, useParams } from \"react-router-dom\";\n\ntype AppState = {\n  data: Topology<Objects<GeoJsonProperties>> | undefined,\n  selection: DataName\n};\n\nconst Home = () => {\n  const history = useHistory();\n  const { id } = useParams<{id: string}>();\n\n  let idEnum: DataName | undefined = DataName[id as keyof typeof DataName]\n\n  const [data, setData] = useState<Topology<Objects<GeoJsonProperties>> | undefined>(undefined);\n  const [selection, setSelection] = useState<DataName>(idEnum ? idEnum : DataName.cmi10_80_1);\n\n  useEffect(() => {\n    json<Topology<Objects<GeoJsonProperties>>>(process.env.PUBLIC_URL + \"/usa-topo.json\").then(setData);\n  }, []);\n\n  useEffect(() => {\n    console.log(\"id changed\")\n    let idEnum: DataName | undefined = DataName[id as keyof typeof DataName]\n    if (idEnum) {\n      console.log(\"setting selection\")\n      setSelection(idEnum);\n    }\n  }, [id])\n\n  const onSelectionChange = (event: ChangeEvent<HTMLSelectElement>) => {\n    history.push(event.target.value);\n  }\n\n  return (\n    <React.Fragment>\n      <h1>Climate Risk Map</h1>\n      <DataSelector onSelectionChange={onSelectionChange} selection={selection} />\n      <Map data={data} selection={selection}/>\n    </React.Fragment>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport Home from './Home';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route  } from \"react-router-dom\";\n\nconst App = () => {\n  return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <Switch>\n            <Route path=\"/:id\">\n                <Home />\n            </Route>\n            <Route path=\"/\">\n                <Home />\n            </Route>\n        </Switch> \n      </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}