{"version":3,"sources":["DataDefinitions.ts","Map.tsx","DataSelector.tsx","NormalizeSelector.tsx","Home.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["DataName","regularNumber","format","dataDefinitions","Map","set","cmi10_00_1","name","units","formatter","color","scaleDiverging","scales","domain","normalized","cmi10_80_9","cmi10_80_1","def_00_19","x","def_80_19","def_80_99","dry_00_19","scaleSequential","dry_80_19","dry_80_99","gw_00_19","gw_80_19","gw_80_99","ht_00_19","ht_80_19","ht_80_99","pet_00_19","pet_80_19","pet_80_99","prc_00_19","prc_80_19","prc_80_99","ro_00_19","ro_80_19","ro_80_99","wet_00_19","wet_80_19","wet_80_99","GDP2018","scaleThreshold","range","Allindustr","Farming","Mining","Constructi","Retailtrad","Informatio","Wholesalet","discuss","PerCapitap","tooltip","select","append","attr","style","getUnitString","handleMouseOut","d","this","transition","duration","data","selection","svgRef","useRef","useEffect","dataType","get","svg","current","undefined","countyGeoJson","feature","objects","counties","legendSequential","legendColor","cells","shapeWidth","shapeHeight","shapePadding","titleWidth","title","labelFormat","orient","scale","call","selectAll","features","join","properties","NaN","geoPath","datum","mesh","states","on","value","this_county","County_Sta","replace","html","event","pageX","pageY","handleMouseOverCreator","ref","viewBox","id","DataSelector","onSelectionChange","showNormalized","onChange","Array","from","entries","filter","definition","map","dataName","key","NormalizeSelector","type","checked","htmlFor","getDataSelectionFromString","urlString","getInfoFromSelection","dataSelectionFromUrl","normalizedSelection","DataDefinitions","Home","history","useHistory","infoFromUrl","URLSearchParams","useLocation","search","urlSelection","urlNormalizedSelection","urlNormalized","useState","setData","setSelection","setNormalizedSelection","setNormalized","json","process","then","Fragment","target","newSelection","push","selectionInfo","App","basename","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.669e4335.chunk.js","sourcesContent":["import * as scales from 'd3-scale-chromatic';\nimport { scaleThreshold, scaleDiverging, scaleSequential, format } from 'd3';\nimport { ScaleSequential, ScaleThreshold, ScaleDiverging } from 'd3-scale';\n\nexport enum DataName {\n    cmi10_00_1,\n    cmi10_80_9,\n    cmi10_80_1,\n    def_00_19,\n    def_80_19,\n    def_80_99,\n    dry_00_19,\n    dry_80_19,\n    dry_80_99,\n    gw_00_19,\n    gw_80_19,\n    gw_80_99,\n    ht_00_19,\n    ht_80_19,\n    ht_80_99,\n    pet_00_19,\n    pet_80_19,\n    pet_80_99,\n    prc_00_19,\n    prc_80_19,\n    prc_80_99,\n    ro_00_19,\n    ro_80_19,\n    ro_80_99,\n    wet_00_19,\n    wet_80_19,\n    wet_80_99,\n    Allindustr,\n    Farming,\n    Mining,\n    Constructi,\n    Retailtrad,\n    Informatio,\n    Wholesalet,\n    discuss,\n    PerCapitap,\n    GDP2018,\n}\n\nexport type DataDefinition = {\n    name: string,\n    units: string,\n    formatter: (n: number | { valueOf(): number }) => string,\n    color: ScaleSequential<string> | ScaleThreshold<number, string> | ScaleDiverging<string>,\n    normalized: boolean \n}\n\nconst regularNumber = format(\",.0f\");\n\nconst dataDefinitions = new Map<DataName, DataDefinition>();\ndataDefinitions.set(DataName.cmi10_00_1, {\n    name:\"Climate Moisture Index 2000-2019\",\n    units:\"\",\n    formatter: regularNumber,\n    color: scaleDiverging<string>(scales.interpolateBrBG).domain([-10, 0, 10]),\n    normalized: true\n});\ndataDefinitions.set(DataName.cmi10_80_9, {\n    name:\"Climate Moisture Index 1980-1999\",\n    units:\"\",\n    formatter: regularNumber,\n    color: scaleDiverging<string>(scales.interpolateBrBG).domain([-10, 0, 10]),\n    normalized: true\n});\ndataDefinitions.set(DataName.cmi10_80_1, {\n    name:\"Climate Moisture Index 1980-2019\",\n    units:\"\",\n    formatter: regularNumber,\n    color: scaleDiverging<string>(scales.interpolateBrBG).domain([-10, 0, 10]),\n    normalized: true\n});\ndataDefinitions.set(DataName.def_00_19, {\n    name:\"Irrigation Deficit 2000-2019\",\n    units:\"mm/year\",\n    formatter: regularNumber,\n    color: scaleDiverging<string>(x => scales.interpolateBrBG(1-x)).domain([-600, 0, 1600]),\n    normalized: false\n});\ndataDefinitions.set(DataName.def_80_19, {\n    name:\"Irrigation Deficit 1980-2019\",\n    units:\"mm/year\",\n    formatter: regularNumber,\n    color: scaleDiverging<string>(x => scales.interpolateBrBG(1-x)).domain([-600, 0, 1600]),\n    normalized: false\n});\ndataDefinitions.set(DataName.def_80_99, {\n    name:\"Irrigation Deficit 1980-1999\",\n    units:\"mm/year\",\n    formatter: regularNumber,\n    color: scaleDiverging<string>(x => scales.interpolateBrBG(1-x)).domain([-600, 0, 1600]),\n    normalized: false\n});\ndataDefinitions.set(DataName.dry_00_19, {\n    name:\"Drought Indicator 2000-2019\",\n    units:\"mm/year\",\n    formatter: regularNumber,\n    color: scaleSequential<string>(scales.interpolateBlues).domain([0, 1500]),\n    normalized: false\n});\ndataDefinitions.set(DataName.dry_80_19, {\n    name:\"Drought Indicator 1980-2019\",\n    units:\"mm/year\",\n    formatter: regularNumber,\n    color: scaleSequential<string>(scales.interpolateBlues).domain([0, 1500]),\n    normalized: false\n});\ndataDefinitions.set(DataName.dry_80_99, {\n    name:\"Drought Indicator 1980-1999\",\n    units:\"mm/year\",\n    formatter: regularNumber,\n    color: scaleSequential<string>(scales.interpolateBlues).domain([0, 1500]),\n    normalized: false\n});\ndataDefinitions.set(DataName.gw_00_19, {\n    name:\"Groundwater 2000-2019\",\n    units:\"mm/month\",\n    formatter: regularNumber,\n    color: scaleSequential<string>(scales.interpolateBlues).domain([0, 40]),\n    normalized: false\n});\ndataDefinitions.set(DataName.gw_80_19, {\n    name:\"Groundwater 1980-2019\",\n    units:\"mm/month\",\n    formatter: regularNumber,\n    color: scaleSequential<string>(scales.interpolateBlues).domain([0, 40]),\n    normalized: false\n});\ndataDefinitions.set(DataName.gw_80_99, {\n    name:\"Groundwater 1980-1999\",\n    units:\"mm/month\",\n    formatter: regularNumber,\n    color: scaleSequential<string>(scales.interpolateBlues).domain([0, 40]),\n    normalized: false\n});\ndataDefinitions.set(DataName.ht_00_19, {\n    name:\"Maximum Month Temperature 2000-2019\",\n    units:\"°C\",\n    formatter: regularNumber,\n    color: scaleDiverging<string>(x => scales.interpolateSpectral(1 - x)).domain([20, 30, 40]),\n    normalized: false\n});\ndataDefinitions.set(DataName.ht_80_19, {\n    name:\"Maximum Month Temperature 1980-2019\",\n    units:\"°C\",\n    formatter: regularNumber,\n    color: scaleDiverging<string>(x => scales.interpolateSpectral(1 - x)).domain([20, 30, 40]),\n    normalized: false\n});\ndataDefinitions.set(DataName.ht_80_99, {\n    name:\"Maximum Month Temperature 1980-1999\",\n    units:\"°C\",\n    formatter: regularNumber,\n    color: scaleDiverging<string>(x => scales.interpolateSpectral(1 - x)).domain([20, 30, 40]),\n    normalized: false\n});\ndataDefinitions.set(DataName.pet_00_19, {\n    name:\"Mean Annual Potential Evapotranspiration 2000-2019\",\n    units:\"mm/year\",\n    formatter: regularNumber,\n    color: scaleSequential<string>(scales.interpolateBlues).domain([300, 1700]),\n    normalized: false\n});\ndataDefinitions.set(DataName.pet_80_19, {\n    name:\"Mean Annual Potential Evapotranspiration 1980-2019\",\n    units:\"mm/year\",\n    formatter: regularNumber,\n    color: scaleSequential<string>(scales.interpolateBlues).domain([300, 1700]),\n    normalized: false\n});\ndataDefinitions.set(DataName.pet_80_99, {\n    name:\"Mean Annual Potential Evapotranspiration 1980-1999\",\n    units:\"mm/year\",\n    formatter: regularNumber,\n    color: scaleSequential<string>(scales.interpolateBlues).domain([300, 1700]),\n    normalized: false\n});\ndataDefinitions.set(DataName.prc_00_19, {\n    name: \"Mean Annual Precipitation 2000-2019\",\n    units:\"mm/year\",\n    formatter: regularNumber,\n    color: scaleSequential<string>(scales.interpolateBlues).domain([0, 2200]),\n    normalized: false\n});\ndataDefinitions.set(DataName.prc_80_19, {\n    name:\"Mean Annual Precipitation 1980-2019\",\n    units:\"mm/year\",\n    formatter: regularNumber,\n    color: scaleSequential<string>(scales.interpolateBlues).domain([0, 2200]),\n    normalized: false\n});\ndataDefinitions.set(DataName.prc_80_99, {\n    name:\"Mean Annual Precipitation 1980-1999\",\n    units:\"mm/year\",\n    formatter: regularNumber,\n    color: scaleSequential<string>(scales.interpolateBlues).domain([0, 2200]),\n    normalized: false\n});\ndataDefinitions.set(DataName.ro_00_19, {\n    name:\"Mean Annual Runoff 2000-2019\",\n    units:\"mm/year\",\n    formatter: regularNumber,\n    color: scaleSequential<string>(scales.interpolateBlues).domain([0, 2000]),\n    normalized: false\n});\ndataDefinitions.set(DataName.ro_80_19, {\n    name:\"Mean Annual Runoff 1980-2019\",\n    units:\"mm/year\",\n    formatter: regularNumber,\n    color: scaleSequential<string>(scales.interpolateBlues).domain([0, 2000]),\n    normalized: false\n});\ndataDefinitions.set(DataName.ro_80_99, {\n    name:\"Mean Annual Runoff 1980-1999\",\n    units:\"mm/year\",\n    formatter: regularNumber,\n    color: scaleSequential<string>(scales.interpolateBlues).domain([0, 2000]),\n    normalized: false\n});\ndataDefinitions.set(DataName.wet_00_19, {\n    name:\"Flood Indicator 2000-2019\",\n    units:\"mm/month\",\n    formatter: regularNumber,\n    color: scaleSequential<string>(scales.interpolateBlues).domain([0, 500]),\n    normalized: false\n});\ndataDefinitions.set(DataName.wet_80_19, {\n    name:\"Flood Indicator 1980-2019\",\n    units:\"mm/month\",\n    formatter: regularNumber,\n    color: scaleSequential<string>(scales.interpolateBlues).domain([0, 500]),\n    normalized: false\n});\ndataDefinitions.set(DataName.wet_80_99, {\n    name:\"Flood Indicator 1890-1999\",\n    units:\"mm/month\",\n    formatter: regularNumber,\n    color: scaleSequential<string>(scales.interpolateBlues).domain([0, 500]),\n    normalized: false\n});\ndataDefinitions.set(DataName.GDP2018, {\n    name: \"GDP 2018\",\n    units: \"USD\",\n    formatter: format(\"$,.0f\"),\n    color: scaleThreshold<number, string>().domain([0, 1000000, 2000000, 3000000, 10000000, 100000000, 300000000, 700000000]).range(scales.schemeGreens[8]),\n    normalized: false\n});\ndataDefinitions.set(DataName.Allindustr, {\n    name:\"Allindustr\",\n    units:\"\",\n    formatter: regularNumber,\n    color: scaleSequential<string>(scales.interpolateGreens).domain([0, 1000000]),\n    normalized: false\n});\ndataDefinitions.set(DataName.Farming, {\n    name:\"Farming\",\n    units:\"\",\n    formatter: regularNumber,\n    color: scaleSequential<string>(scales.interpolateGreens).domain([0, 20000]),\n    normalized: false\n});\ndataDefinitions.set(DataName.Mining, {\n    name:\"Mining\",\n    units:\"\",\n    formatter: regularNumber,\n    color: scaleSequential<string>(scales.interpolateGreens).domain([0, 20000]),\n    normalized: false\n});\ndataDefinitions.set(DataName.Constructi, {\n    name:\"Constructi\",\n    units:\"\",\n    formatter: regularNumber,\n    color: scaleSequential<string>(scales.interpolateGreens).domain([0, 20000]),\n    normalized: false\n});\ndataDefinitions.set(DataName.Retailtrad, {\n    name:\"Retailtrad\",\n    units:\"\",\n    formatter: regularNumber,\n    color: scaleSequential<string>(scales.interpolateGreens).domain([0, 20000]),\n    normalized: false\n});\ndataDefinitions.set(DataName.Informatio, {\n    name:\"Informatio\",\n    units:\"\",\n    formatter: regularNumber,\n    color: scaleSequential<string>(scales.interpolateGreens).domain([0, 20000]),\n    normalized: false\n});\ndataDefinitions.set(DataName.Wholesalet, {\n    name:\"Wholesalet\",\n    units:\"\",\n    formatter: regularNumber,\n    color: scaleSequential<string>(scales.interpolateGreens).domain([0, 20000]),\n    normalized: false\n});\ndataDefinitions.set(DataName.discuss, {\n    name:\"discuss\",\n    units:\"\",\n    formatter: regularNumber,\n    color: scaleSequential<string>(scales.interpolateGreens).domain([20, 60]),\n    normalized: false\n});\ndataDefinitions.set(DataName.PerCapitap, {\n    name:\"PerCapitap\",\n    units:\"\",\n    formatter: regularNumber,\n    color: scaleDiverging<string>(scales.interpolateBrBG).domain([10000, 40000, 100000]),\n    normalized: false\n});\n\nexport default dataDefinitions;","import React, { useRef, useEffect } from 'react';\nimport { select, geoPath, event } from 'd3';\nimport { feature, mesh } from 'topojson-client';\nimport { Objects, Topology, GeometryCollection } from 'topojson-specification';\nimport { GeoJsonProperties } from 'geojson';\nimport dataDefinitions, { DataName } from './DataDefinitions';\nimport { legendColor } from 'd3-svg-legend';\n\nconst tooltip = select(\"body\")\n    .append(\"div\")\n    .attr(\"class\", \"tooltip\")\n    .style(\"opacity\", 0)\n    .style(\"position\", \"absolute\")\n    .style(\"font-size\", \"0.7em\")\n    .style(\"font-family\", \"sans-serif\")\n    .style(\"font-weight\", 600)\n    .style(\"padding\", \"4px\")\n    .style(\"background\", \"white\")\t\n    .style(\"pointer-events\", \"none\");\n\nconst handleMouseOverCreator = (selection: DataName) => {\n    return function(this: any, d: any) {\n        select(this)\n            .style(\"opacity\", 0.5)\n            .style(\"stroke\", \"black\")\n            .style(\"stroke-width\", 0.5)\n    \n        tooltip.transition()\n            .duration(200)\n            .style(\"opacity\", .9)\n        \n        let value = 0\n        let name = \"---\"\n    \n        let this_county = d.properties[DataName[selection]]\n        if (this_county === 0 || this_county) {\n            value = this_county;\n            name = d.properties.County_Sta.replace(\"_\", \", \")\n        }\n        const dataType = dataDefinitions.get(selection)!;\n\n        tooltip.html(`${name}: ${dataType.formatter(value) + getUnitString(dataType.units)}`)\t\n            .style(\"left\", `${event.pageX + 20}px`)\t\t\n            .style(\"top\", (event.pageY - 45) + \"px\");\n    }\n};\n\nconst getUnitString = (units: string) => units ? ` ${units}` : \"\";\nconst getUnitStringWithParens = (units: string) => units ? ` (${units})` : \"\";\n\nconst handleMouseOut = function(this:any, d:any) {\n    select(this)\n        .style(\"opacity\", 1)\n        .style(\"stroke\", null)\n\n    tooltip.transition()\t\t\n        .duration(200)\t\t\n        .style(\"opacity\", 0)\n}\n\nconst Map = ({data, selection}: {data: Topology<Objects<GeoJsonProperties>> | undefined, selection: DataName}) => {\n    const svgRef = useRef<SVGSVGElement>(null);\n\n    useEffect(() => {\n        const dataType = dataDefinitions.get(selection)!;\n        const svg = select(svgRef.current);\n\n        if (data === undefined) {\n            return;\n        }\n        const countyGeoJson = feature(\n            data,\n            data.objects.counties as GeometryCollection<GeoJsonProperties>\n        )\n\n        // legend\n        const legendSequential = legendColor()\n            .cells(5)\n            .shapeWidth(20)\n            .shapeHeight(30)\n            .shapePadding(0)\n            .titleWidth(200)\n            .title(dataType.name + getUnitStringWithParens(dataType.units))\n            .labelFormat(dataType.formatter)\n            .orient(\"vertical\")\n            .scale(dataType.color)\n\n        svg.select<SVGGElement>(\"#legend\")\n            .attr(\"transform\", \"translate(925, 320)\")\n            // @ts-ignore\n            .call(legendSequential)\n\n        // colorized counties\n        svg.select(\"#counties\")\n            .selectAll(\"path\")\n            .data(countyGeoJson.features)\n            .join(\"path\")\n            .attr(\"class\", \"county\")\n            .attr(\"fill\", d => {\n                if (d.properties) {\n                    return dataType.color(d.properties[DataName[selection]]);\n                } else {\n                    return dataType.color(NaN);\n                }\n            })\n            .attr(\"d\", geoPath());\n\n        // state borders\n        svg.select(\"#states\")\n            .select(\"path\")\n            .datum(mesh(data, data.objects.states as GeometryCollection))\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke\", \"white\")\n            .attr(\"stroke-linejoin\", \"round\")\n            .attr(\"d\", geoPath());\n\n        // tooltips\n        svg\n            .selectAll(\".county\")\n            .on(\"touchmove mousemove\", handleMouseOverCreator(selection))\n            .on(\"touchend mouseleave\", handleMouseOut);\n    }, [data, selection])\n\n    return (\n        <svg ref={svgRef} viewBox=\"0, 0, 1175, 610\">\n            <g id=\"legend\"></g>\n            <g id=\"counties\"></g>\n            <g id=\"states\"><path /></g>\n        </svg>\n    );\n}\n\nexport default Map;","import React, { ChangeEvent } from 'react';\nimport dataDefinitions, { DataName } from './DataDefinitions';\n\ntype Props = {\n    selection: DataName,\n    onSelectionChange: (event: ChangeEvent<HTMLSelectElement>) => void,\n    showNormalized: boolean\n};\n\nconst getUnitString = (units: string) => units ? `(${units})` : \"\";\n\nconst DataSelector = ({selection, onSelectionChange, showNormalized}: Props) => {\n    const getOptions = () => {\n        return Array.from(dataDefinitions.entries())\n        .filter(([_, definition]) => showNormalized ? definition.normalized : !definition.normalized)\n        .map(\n            ([dataName, data]) => <option key={DataName[dataName]} value={DataName[dataName]}>{data.name} {getUnitString(data.units)}</option>\n        )\n    }\n\n    return (\n    <select value={DataName[selection]} onChange={onSelectionChange}>\n        {getOptions()}\n    </select>\n    )\n}\n\nexport default DataSelector;","import React, { ChangeEvent } from 'react';\n\ntype Props = {\n    onSelectionChange: (event: ChangeEvent<HTMLInputElement>) => void,\n    showNormalized: boolean\n};\n\nconst NormalizeSelector = ({onSelectionChange, showNormalized}: Props) =>\n    <form>\n        <div>\n            <input type=\"radio\" id=\"raw\" name=\"data-type\" value=\"raw\" checked={!showNormalized} onChange={onSelectionChange} />\n            <label htmlFor=\"raw\">Raw Data</label>\n        </div>\n\n        <div>\n            <input type=\"radio\" id=\"normalized\" name=\"data-type\" value=\"normalized\"  checked={showNormalized} onChange={onSelectionChange} />\n            <label htmlFor=\"normalized\">Normalized Data</label>\n        </div>\n    </form>\n\nexport default NormalizeSelector;","import React, { useEffect, useState, ChangeEvent } from 'react';\nimport Map from './Map';\nimport DataSelector from './DataSelector';\nimport NormalizeSelector from './NormalizeSelector';\nimport { Objects, Topology } from 'topojson-specification';\nimport { GeoJsonProperties } from 'geojson';\nimport './App.css';\nimport DataDefinitions, { DataName } from './DataDefinitions';\nimport { json } from 'd3-fetch';\nimport { useHistory, useLocation } from \"react-router-dom\";\n\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nfunction getDataSelectionFromString(urlString: string | null): DataName | undefined {\n  return DataName[urlString as keyof typeof DataName];\n}\n\nfunction getInfoFromSelection(dataSelectionFromUrl: DataName | undefined): { selection: DataName | undefined, normalizedSelection: DataName | undefined, normalized: boolean } {\n  let normalizedSelection;\n  let selection;\n  let normalized = false;\n\n  if (dataSelectionFromUrl !== undefined) {\n    const dataDefinition = DataDefinitions.get(dataSelectionFromUrl);\n    normalized = dataDefinition!.normalized;\n    if (normalized) {\n      normalizedSelection = dataSelectionFromUrl;\n    } else {\n      selection = dataSelectionFromUrl;\n    }\n  }\n\n  return {\n    selection,\n    normalizedSelection,\n    normalized\n  }\n}\n\nconst Home = () => {\n  const history = useHistory();\n  const urlString = useQuery().get(\"id\")\n  const dataSelectionFromUrl = getDataSelectionFromString(urlString);\n  const infoFromUrl = getInfoFromSelection(dataSelectionFromUrl);\n\n  let urlSelection = infoFromUrl.selection !== undefined ? infoFromUrl.selection : DataName.def_80_19;\n  let urlNormalizedSelection = infoFromUrl.normalizedSelection !== undefined ? infoFromUrl.normalizedSelection : DataName.cmi10_80_1;\n  let urlNormalized = infoFromUrl.normalized;\n\n  const [data, setData] = useState<Topology<Objects<GeoJsonProperties>> | undefined>(undefined);\n  const [selection, setSelection] = useState<DataName>(urlSelection);\n  const [normalizedSelection, setNormalizedSelection] = useState<DataName>(urlNormalizedSelection);\n  const [showNormalized, setNormalized] = useState<boolean>(urlNormalized);\n\n  useEffect(() => {\n    json<Topology<Objects<GeoJsonProperties>>>(process.env.PUBLIC_URL + \"/usa-topo.json\").then(setData);\n  }, []);\n\n  const onSelectionChange = (event: ChangeEvent<HTMLSelectElement>) => {\n    history.push(\"?id=\" + event.target.value);\n    const selection = getDataSelectionFromString(event.target.value);\n    const selectionInfo = getInfoFromSelection(selection);\n\n    if (selectionInfo.selection !== undefined) {\n      setSelection(selectionInfo.selection);\n    }\n\n    if (selectionInfo.normalizedSelection !== undefined) {\n      setNormalizedSelection(selectionInfo.normalizedSelection);\n    }\n  }\n\n  useEffect(() => {\n    if (urlSelection !== undefined) {\n      setSelection(urlSelection);\n    }\n  }, [urlSelection])\n\n  useEffect(() => {\n    if (urlNormalizedSelection !== undefined) {\n      setNormalizedSelection(urlNormalizedSelection);\n    }\n  }, [urlNormalizedSelection]);\n\n  useEffect(() => {\n    setNormalized(urlNormalized);\n  }, [urlNormalized])\n\n  const onNormalizeChanged = (event: ChangeEvent<HTMLInputElement>) => {\n    const normalized = event.target.value === \"normalized\";\n    setNormalized(normalized);\n    const newSelection = normalized ? normalizedSelection : selection;\n    history.push(\"?id=\" + DataName[newSelection]);\n  }\n\n  return (\n    <React.Fragment>\n      <h1>Climate Risk Map</h1>\n      <NormalizeSelector onSelectionChange={onNormalizeChanged} showNormalized={showNormalized} />\n      <DataSelector onSelectionChange={onSelectionChange} selection={showNormalized ? normalizedSelection : selection} showNormalized={showNormalized} />\n      <Map data={data} selection={showNormalized ? normalizedSelection : selection} />\n    </React.Fragment>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport Home from './Home';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route  } from \"react-router-dom\";\n\nconst App = () => {\n  return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <Switch>\n            <Route path=\"/\">\n                <Home />\n            </Route>\n        </Switch> \n      </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}